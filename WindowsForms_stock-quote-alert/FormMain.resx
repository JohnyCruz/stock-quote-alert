<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAGACoDAAAFgAAACgAAAAgAAAAQAAAAAEAGAAAAAAAgAwAAAAAAAAAAAAAAAAAAAAA
        AABQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAickHDEuKhQOAhQOAhkUCCw
        qJBYSBBQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQ
        OAhQOAhYSBB0aDhQOAhQOAhQOAh8cEj8+PiQgGBQOAh8aED8+PhoWChQOAh0YDh4aEBQOAhQOAhQOAhQ
        OAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAjw8Ojc2MhUQBBQOAhQOAjA
        uKj8+PhoWChQOAj8+PiMgFhQOAjw6OiUiGhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQ
        OAhQOAhQOAhQOAhQOAhQOAhQOAh4aED8+Pj8+PiwqJBQOAhQOAjY0Mj8+PhQOAjY0Mi0sJhoWCj08PBQ
        OAhcSBh8aEBQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhY
        SBDMyLj8+Pj8+PiUiGhQOAjs6ODMyLiooIDU0MCsoIjQyLhUQBD4+PCYkHBQOAhQOAhQOAhQOAhQOAhQ
        OAhQOAhQOAhQOAhQOAhQOAhQOAisoIiYiGhgUCBQQAhQOAhQOAhQOAhUQAjAuKD8+Pjg4NCYiGjs6ODc
        2MjMyLjc2NCsoIjU0MCooIBQOAhcSBhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAiwqJD8
        +Pj8+Pj8+Pj08PDY0Mi8sKCMgGBwYDCQgGDg2ND8+Pjg2NDc2NDMyLjo6ODs6OjIwLCQiGDQyLiEeFBQ
        OAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhoWCiwqIjU0MDw8Oj8+Pj8+Pj8+Pj8+Pj4
        +PDc2NDo6OC8uKBcSBhQQAiMgFjw6Ojc2MjMyLiIeFBQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQ
        OAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhsWDCckHC8sKDg2NDIwLBcSBhQOAhQOAhYQBD4+PDw
        8OiMgGCgmHh0aDhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhoWCiM
        gFiwqJDY0Mj08PD8+Pjw8Oi4sJhUQBBQOAhQOAhQOAiMgGDEuKi8sKBsWDBQOAhQOAhQOAhQOAhQOAhQ
        OAhQOAhQOAhQOAhQOAhUQAhQQAhwYDCUiGjAuKjw8Oj8+Pj8+Pj8+Pj8+PjU0MC0qJjAuKjEwKhsYDBQ
        OAhQOAhQOAhQOAhQOAh8cEh0YDhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAjMyLj8+Pj8+Pj8
        +Pj8+Pj8+Pjs6OC8sKB8aEBQOAiEcFDEuKj8+Pj8+PiYiGhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQ
        OAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhoWCisoIi0sJiooIiMgFhkUCBQOAhQOAhQOAi8sKD8+Pj8
        +Pjg2NCQgGCsoIjc2NB4aEBQOAhQQAhQQAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQ
        OAhQOAhQOAhQOAhQOAhQOAhQOAhQOAh8cEj48PD8+Pj8+Pi4sJhkUCDY0Mj8+PjQyLh0YDjk4NisoIhQ
        OAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAiooIj8
        +Pj8+Pj8+PiUiGhQOAjg2ND8+Pjw8OhwYDjc2Mj8+PiUiGhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQ
        OAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhYSBDU0MD8+Pj8+Pj08PB0aDhQOAi8sKD8+Pj8+PiUiGiM
        gGD8+Pj8+Ph4aEBQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAh8
        cEj48PD8+Pj8+PjMyLhUQBBQOAh4aED8+Pj8+Pjo6OBYQBDU0MD8+Pj8+Ph0aDhQOAhQOAhQOAhQOAhQ
        OAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhgUCDEuKj8+Pj8+Pj8+PickHBQOAhQOAhQOAjQyLj8
        +Pj8+PiUiGhQOAj4+Pj8+Pj8+PhsWDBQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQ
        OAhUQAjc2Mj8+Pj4+Pi8uKBkUCBQOAhQOAhQOAiEeFD8+Pj8+Pjs6OBQOAhkUCj8+Pj8+Pj8+PhoWChQ
        OAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhcSBhsWDBUQBBQOAhQOAhQOAhQ
        OAhQOAjY0Mj8+Pj8+PikmHhQOAhwYDD8+Pj8+Pj8+PhoWChQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQ
        OAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAiIeFD8+Pj8+Pjo6OBYQBBQOAhwYDD8
        +Pj8+Pj8+PhoWChQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQ
        OAhQOAhQOAhQOAhQOAjc2Mj8+Pj8+PickHBQOAhQOAhwYDD8+Pj8+Pj8+Ph0YDhQOAhQOAhQOAhQOAhQ
        OAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAiMgGD8+Pj8+Pjg2NBQ
        OAhQOAhQOAhwYDD8+Pj8+Pj8+Ph0aDhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQ
        OAhQOAhQOAhQOAhQOAhQOAhQOAhQQAjo4Nj8+Pj8+PiEeFBQOAhQOAhQOAhwYDD8+Pj8+Pj8+Ph0aDhQ
        OAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAiwqJD8
        +Pj8+PiomIBQOAhQOAhQOAhQOAhwYDD8+Pj8+Pj8+Ph0aDhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQ
        OAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAh8cEj8+Pj8+PiQgGBQOAhQOAhQOAhQOAhQOAhwYDD8
        +Pj8+Pj8+PhsWDBQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQ
        OAhQOAhgUCB0YDhUQBBQOAhQOAhQOAhQOAhQOAhQOAhwYDD8+Pj8+Pj8+PhoWChQOAhQOAhQOAhQOAhQ
        OAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQ
        OAhQOAhQOAhwYDD8+Pj8+Pj8+PhoWChQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQ
        OAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhwYDD8+Pj8+Pjo4NhQOAhQ
        OAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQ
        OAhQOAhQOAhQOAhQOAhQOAhQOAh4aED8+Pj8+Pi8sKBQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQ
        OAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAiMgFj8
        +Pj8+PhwYDBQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQ
        OAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAhQOAiwqJD8+PiIeFBQOAhQOAhQOAhQOAhQOAhQOAhQ
        OAhQOAhQOAhQOAhQOAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
</value>
  </data>
</root>